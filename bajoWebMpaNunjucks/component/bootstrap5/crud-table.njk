{% set sorts = _meta.query.sort|d('')|split(':') %}
{% set sortDir = (sorts[1] === '1')|ternary('-1', '1')%}
{% set indexes = [] %}
{% set centers = ['integer', 'smallint', 'float', 'double'] %}
{% for item in attr.schema.indexes %}
  {% for i in item.fields %}
    {{ indexes|array('push', i)|void }}
  {% endfor %}
{% endfor %}
{% cmp 'table', responsive=true, table='hover', id=attr.id %}
  {% cmp 'tableHead' %}
    {% cmp 'tableRow' %}
      {% if not attr.plain %}
        {% cmp 'tableHeader' %}
          {% cmp 'check', class='check-toggler' %}{% endcmp %}
        {% endcmp %}
      {% endif %}
      {% for p in attr.schema.properties %}
        {% cmp 'tableHeader', text=centers|array('includes', p.type)|ternary('end', '') + ',nowrap'  %}
          {% set label = p.label|ternary('field.' + p.label, 'field.' + p.name)|t %}
          {% if p.index or p.name === 'id' or indexes|array('includes', p.name) %}
            {% set params = _meta.query|omit([_meta.qsKey.sort, _meta.qsKey.page])|set(_meta.qsKey.sort, p.name + ':' + (sorts[0] === p.name)|ternary(sortDir|d(''), '1')) %}
            {% cmp 'a', href='?' + params|qsStringify %}{{ label }}{% endcmp %}
            {% if p.name === sorts[0] %}
              {% cmp 'icon', name=(sortDir === '-1')|ternary('caretUp', 'caretDown') %}{% endcmp %}
            {% endif %}
          {% else %}
            {{ label }}
          {% endif %}
        {% endcmp %}
      {% endfor %}
    {% endcmp %}
  {% endcmp %}
  {% cmp 'tableBody', table='groupDivider' %}
    {% for r in attr.records %}
      {% cmp 'tableRow' %}
        {% if not attr.plain %}
          {% cmp 'tableDataCell' %}
            {% cmp 'check', value=r.id %}{% endcmp %}
          {% endcmp %}
        {% endif %}
        {% for p in attr.schema.properties %}
          {% if p.type === 'boolean' %}
            {% cmp 'tableDataCell', text='center' %}
              {% cmp 'icon', name=r[p.name]|ternary('boxCheck', 'boxUncheck') %}{% endcmp %}
            {% endcmp %}
          {% else %}
            {% cmp 'tableDataCell', text=centers|array('includes', p.type)|ternary('end', undefined) %}{{ r[p.name]|format(p.type) }}{% endcmp %}
          {% endif %}
        {% endfor %}
      {% endcmp %}
    {% endfor %}
  {% endcmp %}
{% endcmp %}
